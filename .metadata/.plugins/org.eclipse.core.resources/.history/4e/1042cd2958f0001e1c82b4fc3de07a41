/*
 * API_max7219_led_display.c
 *
 *  Created on: Apr 1, 2024
 *      Author: lpmeoli
 */


/* Includes ------------------------------------------------------------------*/
#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include "stm32f4xx_hal.h"
#include "stm32f4xx_nucleo_144.h"
#include "API_uart.h"

#include "API_max7219_led_display.h"

/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/

/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/

static SPI_HandleTypeDef hspi1;

/* Private function prototypes -----------------------------------------------*/



/* Public functions ---------------------------------------------------------*/

void init_() {

	/* I2C configuration*/
	hspi1.Instance 				= SPI1;
	hspi1.Init.Mode 			= SPI_MODE_MASTER;
	hspi1.Init.Direction		= SPI_DIRECTION_2LINES
	hspi1.Init.DataSize



	GPIO_InitTypeDef GPIO_InitStruct;

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOB_CLK_ENABLE();

	/* I2C GPIO configuration */
	GPIO_InitStruct.Pin 		= GPIO_PIN_8|GPIO_PIN_9;
	GPIO_InitStruct.Mode 		= GPIO_MODE_AF_OD;
	GPIO_InitStruct.Pull 		= GPIO_NOPULL;
	GPIO_InitStruct.Speed 		= GPIO_SPEED_FREQ_LOW;
	GPIO_InitStruct.Alternate 	= GPIO_AF4_I2C1;

	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

	 /* Peripheral clock enable */
	__HAL_RCC_I2C1_CLK_ENABLE();

	HAL_I2C_Init(&hi2c1);

	/* Chequeo que la direccion statica sea correcta */
	if (read_register(REG_DEVID) != 0xE5) {
		uart_send_string(pmesg_error);
	}

	write_register(REG_BW_RATE, 0x08);
	write_register(REG_DATA_FORMAT, 0x08);
	write_register(REG_POWER_CTL, 0x08);
}

/* Private functions ---------------------------------------------------------*/















