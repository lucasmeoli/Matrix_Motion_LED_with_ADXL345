/*
 * API_accelerometer_adxl345.h
 *
 *  Created on: Mar 31, 2024
 *      Author: lpmeoli
 */

#ifndef API_INC_API_ADXL345_H_
#define API_INC_API_ADXL345_H_

/* Exported types ------------------------------------------------------------*/
typedef bool bool_t;

typedef struct {
	int16_t x_coord;
	int16_t y_coord;
	int16_t z_coord;
} coordinates_t;

typedef enum {
	RESOLUTION_2G		= 0x00,
	RESOLUTION_4G		= 0x01,
	RESOLUTION_8G		= 0x02,
	RESOLUTION_16G		= 0x03,
} adxl345_sensitivity_t;



bool_t adlx345_I2C_init();

/**
 * @brief   Reads the coordinates from the ADXL345 accelerometer.
 *
 * @param   None.
 * @retval  Coordinates structure containing X, Y, and Z coordinates.
 */
coordinates_t adxl345_read_coordinates();

/**
  * @brief  Get the current state of the I2C communication interface with ADXL345.
  * @param  None
  * @retval HAL_I2C_StateTypeDef - Current state of the I2C communication.
  */
HAL_I2C_StateTypeDef adxl345_get_I2C_state();

/**
 * @brief   Set the sensitivity of the ADXL345 accelerometer.
 *
 * @param   sensitivity: The new sensitivity value to be set. This value
 * 			should be within the range of adxl345_sensitivity_t enum.
 * @retval  None.
 */
void adxl345_set_sensitivity(adxl345_sensitivity_t sensitivity);

bool_t adxl345_is_data_ready();


void adxl345_set_BW_RATE(uint8_t value);
void adxl345_set_POWER_CTL(uint8_t value);
void adxl345_set_DATA_FORMAT(uint8_t value);


#endif /* API_INC_API_ADXL345_H_ */
