/*
 * API_adlx345_sensitivity.c
 *
 *  Created on: Apr 9, 2024
 *      Author: lpmeoli
 */

/* Includes ------------------------------------------------------------------*/
#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

#include "stm32f4xx_hal.h"  		/* <- HAL include */
#include "stm32f4xx_nucleo_144.h"

#include "API_adxl345_sensitivity.h"

/* Private typedef -----------------------------------------------------------*/
typedef enum{
	SENSITIVITY_2G		= 0x00,
	SENSITIVITY_4G		= 0x01,
	SENSITIVITY_8G		= 0x02,
	SENSITIVITY_16G		= 0x03,
} sensitivityState_t;


/* Private define ------------------------------------------------------------*/

/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/
static sensitivityState_t current_state;

/* Private function prototypes -----------------------------------------------*/
static void FSM_error_handler(void);

/* Public functions ---------------------------------------------------------*/
void sensitivity_FSM_init() {
	current_state = SENSITIVITY_2G;
}

void sensitivity_FSM_update(uint8_t taps) {
	switch (current_state) {
		case SENSITIVITY_2G:
			adxl345_modify_sensitivity(RESOLUTION_2G);
			break;

		case SENSITIVITY_4G:
			adxl345_modify_sensitivity(RESOLUTION_4G);
			break;

		case SENSITIVITY_8G:
			adxl345_modify_sensitivity(RESOLUTION_8G);
			break;

		case SENSITIVITY_16G:
			adxl345_modify_sensitivity(RESOLUTION_16G);
			break;

		default:
			FSM_error_handler();
			break;
	}
}


/**
 * @brief  This function is executed in case of error occurrence.
 *
 * @param  None
 * @retval None
 */
static void FSM_error_handler(void) {
	/* Turn LED2 on */
	BSP_LED_Init(LED2);
	BSP_LED_On(LED2);
	while (1)
	{
	}
}

